---
- name: Create hcp external
  become: true
  community.docker.docker_network:
    name: hashicorp

- name: Remove vault volume if not in 'production' env
  become: true
  ansible.builtin.file:
    path: "{{ vol_path }}"
    state: absent
  when: STACK_ENV != 'production'
  register: vol_absent_result

- name: Get a list of Docker containers
  community.docker.docker_container_info:
    name: "{{ item }}"
  loop: "{{ containers }}"
  register: containers_info

- name: Remove vault containers if exists
  community.docker.docker_container:
    name: "{{  item.container.Id }}"
    state: absent
    force_kill: true
  with_items:
    - "{{ containers_info.results }}"
  loop_control:
    label: "ID : {{ item.container.Id | default('Unkown Container', true) }} , NAME: {{ item.container.Name | default('Unkown Container', true) }}"
  when: item.exists

- name: Deploy vault using deploy_script
  become: true
  ansible.builtin.command: STACK_DIR={{ stack_dir }} STACK_INIT="{{ STACK_INIT }}" bash {{ deploy_script }} vault
  ignore_errors: true
  register: vault_deployment

- name: Handle errors if occurred
  ansible.builtin.include_tasks: "{{handlers}}/fail_task.yml"
  vars:
    output: "{{ vault_deployment }}"

- name: Get a list of Docker containers
  community.docker.docker_container_info:
    name: "{{ item }}"
  loop: "{{ containers }}"
  register: containers_info

- name: run the docker containers healthcheck
  ansible.builtin.include_tasks: "{{handlers}}/container_healthcheck.yml"
  vars:
    INFO: "{{ containers_info }}"
