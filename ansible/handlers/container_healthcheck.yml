- name: wait for the containers to get ready
  ansible.builtin.wait_for:
    timeout: 8
  delegate_to: localhost

- name: check if contianer is healthy  
  debug:
    msg: "Container {{ item.container.Name }} is healthy"
  with_items :
    - "{{ INFO.results }}"
  loop_control:
    label: "{{ item.container.Name | default('Unknown Container', true ) }}"
  when: item.container.State.Running and item.container.State.Restarting != true


- name: handle errors if container not healthy 
  include_tasks: "{{handlers}}/service_healthcheck.yml"
  vars:
    NAMES: "{{ services }}"
    PATH: "{{ service_path }}"
  with_items :
    - "{{ INFO.results }}"
  when: item.exists != true and item.container.Name != '/vault'

- name: fetch the logfile for the unhealthy container(s)
  # become: true
  fetch:
    src: "{{ item.container.LogPath }}"
    dest: "{{ log_dir }}/docker/{{item.container.Name}}.txt"
    flat: true
    fail_on_missing: true
  with_items :
    - "{{ INFO.results }}"
  loop_control:
    label: "{{ item.container.LogPath | default('Unknown Container', true )  }}" 
  when: item.container.State.Running != true

- name: handle errors if occurred  
  include_tasks: "{{handlers}}/fail_task.yml"
  vars:
    message: "Container {{ item.container.Name }} is NOT healthy"
  with_items :
    - "{{ INFO.results }}"
  loop_control:
    label: "ID : {{ item.container.Id | default('Unknown Container ID', true ) }} , NAME: {{ item.container.Name | default('Unknown Container ID', true ) }}"
  when : item.container.State.Running != true
